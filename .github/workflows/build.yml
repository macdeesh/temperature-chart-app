name: Build and Release

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev librsvg2-dev

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install frontend dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Temperature Chart App v${{ github.ref_name }}'
          releaseBody: |
            Temperature Chart Desktop Application
            
            ## Features
            - Import and visualize CSV temperature data
            - Interactive charts with ECharts integration
            - Export charts as PNG images
            - Save/load analysis sessions (.tdproj files)
            - Dark/light theme support
            - Jump to specific time functionality
            - Multi-channel temperature monitoring (up to 12 channels)
            
            ## Installation
            - **Windows**: Download the `.msi` installer
            - **macOS**: Download the `.dmg` file  
            - **Linux**: Download the `.AppImage` file
            
            Built with Tauri + React + TypeScript + ECharts
          releaseDraft: true
          prerelease: false
          includeUpdaterJson: false

  # Separate job for creating releases on tags
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Create Release Notes
        run: |
          echo "Release created automatically by GitHub Actions" > release-notes.md
          echo "" >> release-notes.md
          echo "## What's Changed" >> release-notes.md
          echo "- Built for Windows, macOS, and Linux" >> release-notes.md
          echo "- Cross-platform desktop temperature analysis application" >> release-notes.md